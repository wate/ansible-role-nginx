# {{ ansible_managed }}
# Virtual Host configuration for {{ vhost_setting.server_name }}
{% if vhost_setting.pre_extra_setting is defined -%}
# Pre Extra setting
{{ vhost_setting.pre_extra_setting }}
{% endif %}
{% if vhost_setting.upstream is defined -%}
upstream {{ vhost_setting.upstream.name }} {
    {{ vhost_setting.upstream.content }}
}
{% endif %}

{% for redirect_host in vhost_setting.redirect_hosts | default([]) -%}
server {
    server_name {{ redirect_host }};
    return 301 $scheme://{{ (vhost_setting.server_name is string) | ternary(vhost_setting.server_name, vhost_setting.server_name[0]) }}$request_uri;
    access_log off;
}
{% endfor -%}

{% if vhost_setting.ssl.certificate is defined -%}
server {
    listen {{ vhost_setting.listen | default(80) }}{{ vhost_setting.default_server | default(false) | ternary(' default_server', '') }};
    listen [::]:{{ vhost_setting.listen | default(80) }}{{ vhost_setting.default_server | default(false) | ternary(' default_server', '') }};
    {% if vhost_setting.server_name is defined -%}
    server_name {{ vhost_setting.server_name if vhost_setting.server_name is string else vhost_setting.server_name | join(' ') }};
    {% endif -%}
    access_log off;
    location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      alias /var/lib/dehydrated/acme-challenges/;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}
{% endif -%}

server {
    {% if vhost_setting.ssl.certificate is defined -%}
    listen 443 ssl http2{{ vhost_setting.default_server | default(false) | ternary(' default_server', '') }};
    listen [::]:443 ssl http2{{ vhost_setting.default_server | default(false) | ternary(' default_server', '') }};
    {% else -%}
    listen {{ vhost_setting.listen | default(80) }}{{ vhost_setting.default_server | default(false) | ternary(' default_server', '') }};
    listen [::]:{{ vhost_setting.listen | default(80) }}{{ vhost_setting.default_server | default(false) | ternary(' default_server', '') }};
    {% endif -%}

    {% if vhost_setting.variables is defined -%}
    {% for variable in vhost_setting.variables | default({}) | dict2items -%}
    set ${{ variable.key }} {{ variable.value }};
    {% endfor -%}
    {% endif -%}

    {% for include_file in vhost_setting.includes | default([]) -%}
    include {{ include_file }};
    {% endfor -%}

    client_max_body_size {{ vhost_setting.client_max_body_size | default(nginx_default_client_max_body_size) }};

    {% if vhost_setting.server_name is defined -%}
    server_name {{ vhost_setting.server_name is string | ternary(vhost_setting.server_name, vhost_setting.server_name | join(' ')) }};
    {% endif -%}

    {% if vhost_setting.access_log is defined -%}
    access_log {{ vhost_setting.access_log }};
    {% endif -%}
    {% if vhost_setting.error_log is defined -%}
    error_log {{ vhost_setting.error_log }};
    {% endif -%}

    {% if vhost_setting.document_root is defined -%}
    root {{ vhost_setting.document_root }};
    {% endif -%}

    {% if vhost_setting.index is defined -%}
    index {{ vhost_setting.index is string | ternary(vhost_setting.index, vhost_setting.index | join(' ')) }};
    {% endif -%}

    {% for add_header in vhost_setting.add_headers | default({}) | dict2items -%}
    add_header {{ add_header.key }} {{ add_header.value }};
    {% endfor -%}

    {% for location in vhost_setting.locations | default([]) -%}
    {% if location.comment is defined -%}
    # {{ location.comment }}
    {% endif -%}
    location {{ location.match_type | default('') }} {{ location.pattern }} {
        {{ location.content | indent(8) }}
    }
    {% endfor -%}

    {% if vhost_setting.ssl.certificate is defined -%}
    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate {{ vhost_setting.ssl.certificate }};
    ssl_certificate_key {{ vhost_setting.ssl.certificate_key }};
    {% if vhost_setting.ssl.trusted_certificate is defined -%}
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate {{ vhost_setting.ssl.trusted_certificate }};
    {% endif -%}

    {% if vhost_setting.ssl.protocols is defined -%}
    ssl_protocols {{ vhost_setting.ssl.protocols | join(' ') }};
    {% endif -%}
    {% if vhost_setting.ssl.ciphers is defined -%}
    ssl_ciphers "{{ vhost_setting.ssl.ciphers | join(':') }}";
    {% endif -%}
    {% if vhost_setting.ssl.prefer_server_ciphers is defined -%}
    ssl_prefer_server_ciphers {{ vhost_setting.ssl.prefer_server_ciphers | ternary('on', 'off') }};
    {% endif -%}

    {% if vhost_setting.ssl.session_timeout is defined -%}
    ssl_session_timeout {{ vhost_setting.ssl.session_timeout }};
    {% endif -%}
    {% if vhost_setting.ssl.session_cache is defined -%}
    ssl_session_cache {{ vhost_setting.ssl.session_cache }};
    {% endif -%}
    {% if vhost_setting.ssl.session_tickets is defined -%}
    ssl_session_tickets {{ vhost_setting.ssl.session_tickets | ternary('on', 'off') }};
    {% endif -%}

    {% if vhost_setting.ssl.dhparam is defined -%}
    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam {{ vhost_setting.ssl.dhparam }};
    {% endif -%}

    {% if vhost_setting.ssl.hsts is defined -%}
    # HSTS (ngx_http_headers_module is required)
    add_header Strict-Transport-Security "{{ vhost_setting.ssl.hsts }}" always;
    {% endif -%}

    {% if vhost_setting.ssl.stapling is defined -%}
    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling {{ vhost_setting.ssl.stapling | ternary('on', 'off') }};
    {% endif -%}
    {% if vhost_setting.ssl.stapling_verify is defined  -%}
    ssl_stapling_verify {{ vhost_setting.ssl.stapling_verify | ternary('on', 'off') }};
    {% endif -%}
    {% endif -%}
    {% if vhost_setting.extra_setting is defined -%}
    # Extra setting
    {{ vhost_setting.extra_setting | indent(8) }}
    {% endif %}
}
